``lazy_matrix_mul`` module
=====================

Using ``lazy_matrix_mul`` function
=============================

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> lazy_matrix_mul(13, [[13, 45], [5, 6]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> lazy_matrix_mul([[1, 2], [3, 4]], 7)
Traceback (most recent call last):
...
TypeError: m_b must be a list

>>> lazy_matrix_mul([3], [[1, 2,], [3, 4]])
Traceback (most recent call last):
...
ValueError: shapes (1,) and (2, 2) not aligned: 1 (dim 0) != 2 (dim 0)

>>> lazy_matrix_mul([[1, 2], [3, 4]], [5])
Traceback (most recent call last):
...
ValueError: shapes (2, 2) and (1,) not aligned: 2 (dim 0) != 1 (dim 0)

>>> lazy_matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> lazy_matrix_mul([[1, 2,], [3, "ALX"]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: invalid data for einsum

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], ["School", 6]])
Traceback (most recent call last):
...
TypeError: invalid data for einsum

>>> lazy_matrix_mul([[1, 2], [3, 4], [6, 7, 8]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
ValueError: matrix dimensions are not compatible for multiplication

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4], [6, 7, 8]])
Traceback (most recent call last):
...
ValueError: matrix dimensions are not compatible for multiplication

>>> lazy_matrix_mul([[1, 2], [5, 6]], [[8, 9]])
Traceback (most recent call last):
...
ValueError: matrix dimensions are not aligned for multiplication

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
array([[ 7, 10],
       [15, 22]])

>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
array([[13, 16]])
