``BaseGeometry`` module
=======================

Using ``base_geometry`` function
================================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> doc = __import__("7-base_geometry").__doc__
>>> len(doc) > 0
True

>>> doc = __import__("7-base_geometry").BaseGeometry.__doc__
>>> len(doc) > 0
True

>>> doc = __import__("7-base_geometry").BaseGeometry.area.__doc__
>>> len(doc) > 0
True

>>> doc = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
>>> len(doc) > 0
True

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.area(10)
Traceback (most recent call last):
...
TypeError: BaseGeometry.area() takes 1 positional argument but 2 were given

>>> print(bg.integer_validator("my_int", 12))
('my_int', 12)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("name")
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("name", "John", 67)
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 4 were given




